name: CI

on:
  push:
    branches: [ develop ]

jobs:
  symfony:
    name: Symfony 5.2 (PHP ${{ matrix.php-versions }}) Developpement

    runs-on: ubuntu-20.04

    services:
      # https://docs.docker.com/samples/library/mysql/
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_USER: test_user
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: test_main
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.0.3']

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true

      - name: Check PHP Version
        run: php -v


      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done
      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate --no-check-all --no-check-publish

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: make install-dev

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————
      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker

      - name: Check the Symfony console
        run: |
          bin/console about
      ## —— Yarn 🐱 ————————————————————————————————————————————————————————————
      - name: Yarn install
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: JS NPM YARN Install
        run: make jsinstall

      - name: Yarn build
        run: yarn run encore production

      ## —— Application 🐱 —————————————————————————————————————————————————————
      - name: Load Fixtures
        run: make load-fixtures

      - name: PHPUnit
        run: make test
